@using Microsoft.AspNetCore.Components.Forms
@using ProcGenFun
@using ProcGenFun.Blazor.Components
@using RandN
@using RandN.Distributions
@using RandN.Extensions

@page "/distributions"

<PageTitle>Distributions</PageTitle>

<Title>Distributions</Title>

<div class="mb-4 flex flex-col md:flex-row gap-x-8 gap-y-3 items-center">
    <div class="flex flex-row gap-2">
        <div>Distribution type:</div>

        <select @bind="distributionType">
            <option value="@DistributionType.Uniform">Uniform</option>
            <option value="@DistributionType.Normal">Normal</option>
        </select>
    </div>

    <button class="px-5 py-2 bg-blue-800 text-gray-50 hover:bg-blue-600 rounded-lg"
        @onclick="GenerateHistogram">Generate Histogram</button>
</div>

@if (values != null)
{
    foreach (var value in values)
    {
        <p>@value</p>
    }
}

@code {
    private readonly IRng rng = StandardRng.Create();

    private DistributionType distributionType = DistributionType.Uniform;

    private IReadOnlyList<double>? values = null;

    public void GenerateHistogram()
    {
        var valuesDist = GetSelectedDist().Repeat(10).Select(v => v.ToList());

        values = valuesDist.Sample(this.rng);
    }

    private IDistribution<double> GetSelectedDist()
    {
        return this.distributionType switch
        {
            DistributionType.Uniform => Uniform.New(0d, 1d),
            DistributionType.Normal => Normal.New(),
            _ => throw new ArgumentOutOfRangeException(),
        };
    }

    public enum DistributionType
    {
        Uniform,
        Normal
    }
}
